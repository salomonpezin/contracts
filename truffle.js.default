const WalletProvider = require('truffle-wallet-provider')
const Wallet = require('ethereumjs-wallet')

const {
  HOST,
  PORT,
  NETWORK_ID,
  TRUFFLE_GAS,
  TRUFFLE_GAS_PRICE,
  INFURA_ACCESS_TOKEN,
} = process.env

const accounts = require('./data/ganache-cli-accounts.json')

const development = {
  from       : accounts[0][1],
  host       : HOST || '127.0.0.1',
  port       : PORT || 8545,
  gas        : TRUFFLE_GAS || 3 * 10**6,
  gasPrice   : TRUFFLE_GAS_PRICE || 20 * 10**9,
  network_id : NETWORK_ID || 5777,
}

const infuraNetworks = ! INFURA_ACCESS_TOKEN ?
  {}:
    ['ropsten', 'rinkeby', 'kovan', 'mainnet'].reduce(
      (result, network) => {

        const envForPrivateKey = `${network.toUpperCase()}_PRIVATE_KEY`
        const privateKeyString = process.env[envForPrivateKey]

        if (privateKeyString) {

          const privateKey = Buffer.from(
            privateKeyString.replace('0x', ''),
            'hex'
          )
          const wallet = Wallet.fromPrivateKey(privateKey)
          const provider = new WalletProvider(
            wallet,
            `https://${network}.infura.io/${INFURA_ACCESS_TOKEN}`
          )

          result[network] = {
            ...development,
            provider
          }
        }

        return result
      },
      {}
    )

module.exports = {
  rpc: development,
  networks: {
    ...infuraNetworks,
    development,
  },
  solc: {
    optimizer: {
      enabled: true,
      runs: 200
    }
  }
}
